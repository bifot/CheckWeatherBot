var token = "TOKEN_TELEGRAM_BOT"; // @BotFather
var tokenWeather = "TOKEN_WEATHER_API"; // http://openweathermap.org/api
var tokenTranslate = "TOKEN_TRANSLATE_YANDEX_API"; // https://tech.yandex.ru/keys/get/

var TelegramBot = require("node-telegram-bot-api");
var req = require("sync-request");
var petrovich = require("petrovich");

var bot = new TelegramBot(token, { polling: true });

console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...\n");

var toUpperChar = (word) => {
  var wordUpperChar = word.substr(0, 1).toUpperCase() + word.substr(1);

  return wordUpperChar;
};

var getWeather = (city, cityHuman) => {
  // –ü–∞—Ä—Å–∏–º –ø–æ–≥–æ–¥—É

  var url = "http://api.openweathermap.org/data/2.5/weather?q=" + city + "&units=metric&appid=" + tokenWeather;

  // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤—ã–≤–æ–¥–∏–º —Å—Å—ã–ª–∫—É –Ω–∞ –∑–∞–ø—Ä–æ—Å
  // console.log(url);

  var res = req("GET", url);

  if (res.statusCode == 200) {
    var body = JSON.parse(res.getBody());
    
    var results = {
      "temp": body.main.temp,
      "tempMin": body.main.temp_min,
      "tempMax": body.main.temp_max, 
      "windSpeed": body.wind.speed,
      "weatherMain": body.weather[0].main,
      "country": body.sys.country
    };

    // –°–∫–ª–æ–Ω—è–µ–º –≥–æ—Ä–æ–¥ –≤ –ø—Ä–µ–¥–ª–æ–∂–Ω—ã–π –ø–∞–¥–µ–∂, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã

    var cityDeclension = {
      gender: "male",
      first: cityHuman
    };

    var cityHuman = toUpperChar(petrovich(cityDeclension, "prepositional").first);

    // –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–ø–∏—Å–∞–Ω–∏—è –ø–æ–≥–æ–¥—ã

    switch (results.weatherMain) {
      case "Clear":
        results.weatherMainEmoji = "üåå";
        results.weatherMainRu = "–ß–∏—Å—Ç–æ–µ –Ω–µ–±–æ";
        break;

      case "Rain":
        results.weatherMainEmoji = "‚òî";
        results.weatherMainRu = "–î–æ–∂–¥—å";
        break;

      case "Mist":
      case "Haze":
      case "Fog":
        results.weatherMainEmoji = "üå´";
        results.weatherMainRu = "–¢—É–º–∞–Ω";
        break;

      case "Snow":
        results.weatherMainEmoji = "‚ùÑ";
        results.weatherMainRu = "–°–Ω–µ–≥";
        break;

      case "Clouds":
        results.weatherMainEmoji = "‚òÅ";
        results.weatherMainRu = "–û–±–ª–∞—á–Ω–æ";
        break;

      case "Drizzle":
        results.weatherMainEmoji = "üåß";
        results.weatherMainRu = "–ù–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å";
        break;

      default:
        results.weatherMainEmoji = "?";
        results.weatherMainRu = results.weatherMain;

        console.log(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≥–æ–¥—ã ${results.weatherMain}`);
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

    var msg = "*–ü–æ–≥–æ–¥–∞ –≤ " + cityHuman + " (" + results.country + ") –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å.*\n\n"
              + results.weatherMainEmoji + " –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: *" + results.temp+ " ¬∞C (" + results.weatherMainRu + ")*\n"
              + results.weatherMainEmoji + " –ú–∏–Ω. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: *" + results.tempMin + " ¬∞C*\n"
              + results.weatherMainEmoji + " –ú–∞–∫—Å. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: *" + results.tempMax + " ¬∞C*\n\n"
              + "üå™ –í–µ—Ç–µ—Ä: *" + results.windSpeed + " –º/—Å*";

    return msg;
  }

  return "–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω.";
};

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞

var translate = (text) => {
  var url = "https://translate.yandex.net/api/v1.5/tr.json/translate?key=" + tokenTranslate
            + "&text=" + encodeURIComponent(text) + "&lang=ru-en&format=plain";
  var res = req("GET", url);
  var body = JSON.parse(res.getBody());

  // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤—ã–≤–æ–¥–∏–º –ø–µ—Ä–µ–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
  // console.log(text + " => " + body.text[0]);

  return body.text[0];
};

bot.on("message", (msg) => {
  // –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ–æ–±—â–µ–Ω–∏–π
  console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${msg.from.first_name} ${msg.from.last_name} (@${msg.from.username}) –Ω–∞–ø–∏—Å–∞–ª ¬´${msg.text}¬ª`);

  switch (msg.text) {
    case "/start":
      var settings = {
        parse_mode: "markdown"
      };

      var username = msg.from.first_name + " " + msg.from.last_name;

      bot.sendMessage(msg.from.id, "*–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, " + username + "!*\n\n" + "–≠—Ç–æ –±–æ—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–≥–æ–¥—ã. "
        + "–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –∫–∞–∫–æ–º-–ª–∏–±–æ –≥–æ—Ä–æ–¥–µ, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ –∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω–æ–º –ø–∞–¥–µ–∂–µ.\n\n"
        + "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥—ã: /help\n\n"
        + "*–í–Ω–∏–º–∞–Ω–∏–µ: –≤—Å–µ —Å–ª–µ–¥—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –ø—Ä–∏–Ω—è—Ç—ã –∑–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.*", settings);
      break;

    case "/help":
      var settings = {
        parse_mode: "markdown"
      };

      bot.sendMessage(msg.from.id, "–ë–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è ¬´—Ç–∞–∫ –∫–∞–∫ –µ—Å—Ç—å¬ª.\n\n"
        + "–ù–∞–ø–∏—Å–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –ø–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –º–æ–∂–Ω–æ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (*@bifot*).", settings);
      break;

    default:
      var settings = {
        parse_mode: "markdown"
      };

      var city = translate(msg.text);
      var message = getWeather(city, msg.text);

      bot.sendMessage(msg.from.id, message, settings);
  }
});